# dLogin by n1llsqq
# OpenSource project for Denizen CIS Community (https://discord.gg/ERPf9rwA)
# Made with üíò

# –£–∫–∞–∑–∞–Ω–∏–µ –º–æ–µ–≥–æ –∞–≤—Ç–æ—Ä—Å—Ç–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ)
consoleNarrate:
  type: world
  events:
    after server start:
    - narrate '<&6>[dLogin] <&7>–°–∫—Ä–∏–ø—Ç –±—ã–ª –∑–∞–ø—É—â–µ–Ω. –°–¥–µ–ª–∞–Ω–æ <&6>n1llsqq'

registerCmd:
  type: command
  name: register
  description: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
  usage: /register
  aliases:
    - reg
    - r
  tab completions:
    1: [–ø–∞—Ä–æ–ª—å]
    2: [–ø–æ–≤—Ç–æ—Ä –ø–∞—Ä–æ–ª—è]
  script:
  - define pass <context.args.get[1]>
  - define passConfirm <context.args.get[2]>
  - define config <script[dLoginConfig].data_key[settings]>
  - if <player.has_flag[dLoginData]>:
    - narrate '<&c>–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!'
    - stop
  - if <[pass]||null> == null:
    - narrate '<&c>–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å!'
    - stop
  - if <[pass].length.is_less_than[<[config].get[passMinLength]>]>:
    - narrate '<&c>–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –ø–∞—Ä–æ–ª—å!'
    - stop
  - if <[pass].length.is_more_than[<[config].get[passMaxLength]>]>:
    - narrate '<&c>–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å!'
    - stop
  - if <script[passwordsblacklist].data_key[passwords].contains[<[pass]>]>:
    - narrate '<&c>–°–ª–∏—à–∫–æ–º –ª—ë–≥–∫–∏–π –ø–∞—Ä–æ–ª—å!'
    - stop
  - if <[passConfirm]||null> == null:
    - narrate '<&c>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å!'
    - stop
  - if <[passConfirm]> != <[pass]> || <[pass]> != <[passConfirm]>:
    - narrate '<&c>–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!'
    - stop
  - flag <player> dLoginData:<map[pass=<element[<player.flag[hashSalt]><[pass]>].utf8_encode.hmac[type=HmacSHA256;key=<player.flag[hashSalt]><[pass]>].to_hex>;loginAttempts=<[config].get[loginAttempts]>;ip=<player.ip>;authorized=true]>
  - flag <player> authorization:!
  - narrate '<&a>–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å'
  - playsound <player> sound:entity.player.levelup pitch:2

loginCmd:
  type: command
  name: login
  description: –í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç
  usage: /login
  aliases:
    - log
    - l
  tab completions:
    1: [–ø–∞—Ä–æ–ª—å]
  script:
  - define pass <element[<player.flag[hashSalt]><context.args.get[1]>].utf8_encode.hmac[type=HmacSHA256;key=<player.flag[hashSalt]><context.args.get[1]>].to_hex>
  - define config <script[dLoginConfig].data_key[settings]>
  - if <player.has_flag[dLoginData].not>:
    - narrate '<&c>–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é /reg [–ø–∞—Ä–æ–ª—å] [–ø–æ–≤—Ç–æ—Ä –ø–∞—Ä–æ–ª—è]'
    - stop
  - if <player.flag[dLoginData].get[authorized].equals[true]>:
    - narrate '<&c>–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!'
    - stop
  - if <[pass]> != <player.flag[dLoginData].get[pass]>:
    - if <player.flag[dLoginData].get[loginAttempts].equals[1].not>:
      - flag <player> dLoginData.loginAttempts:--
      - narrate '<&c>–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç! <proc[russificator]>'
      - stop
    - else:
      - flag <player> dLoginData.loginAttempts:<[config].get[loginAttempts]>
      - ban <player> 'reason:–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ 15 –º–∏–Ω—É—Ç' expire:15m
      - stop
  - flag <player> dLoginData:<map[pass=<player.flag[hashSalt]><[pass]>;loginAttempts=<[config].get[loginAttempts]>;ip=<player.ip>;authorized=true]>
  - flag <player> authorization:!
  - flag <player> activeSession expire:<[config].get[sessionTime]>
  - narrate '<&a>–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç'
  - playsound <player> sound:entity.player.levelup pitch:2

loginHandler:
  debug: false
  type: world
  events:
   on player join:
   # –ê–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è
   - if <script[dLoginConfig].data_key[settings].get[sessions].is_truthy>:
     - if <player.has_flag[dLoginData]> && <player.flag[dLoginData].get[ip].equals[<player.ip>]>:
       - flag <player> dLoginData.authorized:true
       - narrate '<&a>–°–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞. –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç'
       - playsound <player> sound:entity.player.levelup pitch:2
       - stop
   # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
   - if <player.has_flag[dLoginData]>:
     - narrate '<&7>–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å: <&6>/login [–ø–∞—Ä–æ–ª—å]'
     - flag <player> authorization expire:<script[dLoginConfig].data_key[settings].get[authorizationTime]>
     - while <player.has_flag[authorization]>:
       - actionbar '<&7>–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å <&6><player.flag_expiration[authorization].add[1t].duration_since[<util.time_now>].formatted.replace_text[s].with[<&sp>—Å–µ–∫]> <&7>–Ω–∞ –≤—Ö–æ–¥'
       - wait 1s
     - if <player.flag[dLoginData].get[authorized].equals[false]>:
       - kick <player> 'reason:–í—Ä–µ–º—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å—Ç–µ–∫–ª–æ'
   # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
   - else:
     - narrate '<&7>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å: <&6>/reg [–ø–∞—Ä–æ–ª—å] [–ø–æ–≤—Ç–æ—Ä –ø–∞—Ä–æ–ª—è]'
     - flag <player> authorization expire:<script[dLoginConfig].data_key[settings].get[authorizationTime]>
     - while <player.has_flag[authorization]>:
       - actionbar '<&7>–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å <&6><player.flag_expiration[authorization].add[1t].duration_since[<util.time_now>].formatted.replace_text[s].with[<&sp>—Å–µ–∫]> <&7>–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é'
       - wait 1s
     - if <player.has_flag[dLoginData].not>:
       - kick <player> 'reason:–í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å—Ç–µ–∫–ª–æ'
   on player quit:
   - if <player.has_flag[dLoginData]>:
     - flag <player> dLoginData.authorized:false
   on player joins:
   - if <player.has_flag[hashSalt].not>:
     - flag <player> hashSalt:<element[1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ?&!*].to_list.random[24].separated_by[]>
   on player steps on block flagged:authorization:
   - determine cancelled
   on player breaks block flagged:authorization:
   - determine cancelled
   on player changes gamemode flagged:authorization:
   - determine cancelled
   on player crafts item flagged:authorization:
   - determine cancelled
   on player consumes item flagged:authorization:
   - determine cancelled
   on player damages entity flagged:authorization:
   - determine cancelled
   on player damaged flagged:authorization:
   - determine cancelled
   on player drags in inventory flagged:authorization:
   - determine cancelled
   on player edits book flagged:authorization:
   - determine cancelled
   on player clicks block flagged:authorization:
   - determine cancelled
   on player swaps items flagged:authorization:
   - determine cancelled

# –ö–æ–Ω—Ñ–∏–≥
dLoginConfig:
  type: data
  debug: false
  settings:
    # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è
    passMinLength: 6
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è
    passMaxLength: 24
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –≤—Ö–æ–¥–∞
    loginAttempts: 5
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤—Ö–æ–¥–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    authorizationTime: 30s
    # –°–µ—Å—Å–∏–∏ (true - –≤–∫–ª—é—á–µ–Ω–æ)
    sessions: false
    # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
    sessionTime: 10m

# –°–ø–∏—Å–æ–∫ –ª—ë–≥–∫–∏—Ö –ø–∞—Ä–æ–ª–µ–π
passwordsBlacklist:
  type: data
  debug: false
  passwords:
  - qwerty
  - n1llsqq

# –ü–æ–¥–º–µ–Ω–∞ –æ–∫–æ–Ω—á–∞–Ω–∏–π
russificator:
  type: procedure
  debug: false
  definitions: number
  script:
  - define number <player.flag[dLoginData].get[loginAttempts]>
  - if <[number].ends_with[1]>:
    - define suffix <&c>–û—Å—Ç–∞–ª–∞—Å—å<&sp><[number]><&sp>–ø–æ–ø—ã—Ç–∫–∞
  - else if <[number].ends_with[2]> || <[number].ends_with[3]> || <[number].ends_with[4]>:
    - define suffix <&c>–û—Å—Ç–∞–ª–æ—Å—å<&sp><[number]><&sp>–ø–æ–ø—ã—Ç–∫–∏
  - else if <[number].ends_with[1_]>:
    - define suffix <&c>–û—Å—Ç–∞–ª–æ—Å—å<&sp><[number]><&sp>–ø–æ–ø—ã—Ç–æ–∫
  - else:
    - define suffix <&c>–û—Å—Ç–∞–ª–æ—Å—å<&sp><[number]><&sp>–ø–æ–ø—ã—Ç–æ–∫
  - determine <[suffix]>
